#-------------------------------------------------------------------------------
# ~/.config/sh/rc
#
# This is a common "rc" script but it is not strict Bourne-shell syntax.  It
# contains Bash shell syntax, like arrays and double-bracket if statements,
# which will work in both Bash and Zsh shells.
#
#-------------------------------------------------------------------------------

# Include common shell functions
source $DOTDIR/lib/common.sh

# This statement is here and not in the sourcing file b/c the library print
# commands are not yet available in that file.
section "Sourcing -> ~/.config/sh/rc"


#---------------------------------------
# [Determine if SSH Session] {{{
#---------------------------------------
# See: https://unix.stackexchange.com/questions/9605/how-can-i-detect-if-the-shell-is-controlled-from-ssh

SESSION_TYPE=standard
if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
  SESSION_TYPE=remote/ssh
else
  # print command for parent process
  case "$(ps -o comm= -p "$PPID")" in
    sshd|*/sshd)
      SESSION_TYPE=remote/ssh;;
  esac
fi

msg "Using SESSION_TYPE=$SESSION_TYPE"
# }}}


#---------------------------------------
# [PATH Setup] {{{
#---------------------------------------
mkdir_if_not_exist $HOME/.local/bin

BIN_DIRS=(
  $HOME/.local/bin
  $PERSONAL/bin
  /opt/bin
)

for _dir in ${BIN_DIRS[@]}; do
  if [[ -d $_dir ]]; then
    export PATH="$_dir:$PATH"
  fi
done
# }}}


#---------------------------------------
# [SOURCE Common Shell Files] {{{
#---------------------------------------
export SH_DOTDIR=~/.config/sh

FILES_TO_SOURCE=()
FILES_TO_SOURCE+=($SH_DOTDIR/aliases)
FILES_TO_SOURCE+=($(find $SH_DOTDIR/includes-enabled -name '*.sh'))

for _file in ${FILES_TO_SOURCE[@]}; do
  source_file_if_exists $_file
done
# }}}


#---------------------------------------
# [base16-shell] {{{
#---------------------------------------
if [ "$SESSION_TYPE" != 'remote/ssh' ]; then
  msg "Loading base16-shell"

  source $SH_DOTDIR/base16-shell.rc     # Load BASE16_SHELL
  [[ -n "$PS1" ]] \
    && [[ -s "$BASE16_SHELL/profile_helper.sh" ]] \
      && eval "$("$BASE16_SHELL/profile_helper.sh")"
fi
# }}}


# vim: ft=bash  foldlevel=0 foldmarker={{{,}}} foldmethod=marker
