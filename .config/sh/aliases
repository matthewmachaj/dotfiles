#
# ~/.config/sh/aliases
#


#-------------------------------------------------------------------------------
# [Console] {{{
#-------------------------------------------------------------------------------
  ALIASES=${DOTDIR}/.config/sh/aliases
  ZSH_ALIASES=${DOTDIR}/.config/zsh/aliases
  LOCAL_ALIASES=~/.local/dot/aliases
  LOCAL_RC=~/.local/dot/rc

  #-------------------------------------
  # Shell - [aliases]
  #-------------------------------------
  alias al="vim ${ALIASES}"
  alias zal="vim ${ZSH_ALIASES}"
  alias lal="vim ${LOCAL_ALIASES}"
  alias sa="source ${ALIASES}; source ${ZSH_ALIASES}; [ -f ${LOCAL_ALIASES} ] && source ${LOCAL_ALIASES}"

  #-------------------------------------
  # Shell - [rc]
  #-------------------------------------
  alias rc="vim ${DOTDIR}/.config/sh/.rc"
  alias lrc="vim ${LOCAL_RC}"
  alias brc="vim ${DOTDIR}/.config/bash/.bashrc"
  alias zrc="vim ${DOTDIR}/.config/zsh/.zshrc"

  #-------------------------------------
  # [bin]
  #-------------------------------------
  alias bin="cd ~/bin"
  alias lbin="cd ~/.local/bin"
  alias mmbin="cd ~/mmbin"

  #-------------------------------------
  # [DEFAULTS - used by others below]
  #-------------------------------------
  if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
  fi

  alias ll='ls -alhF'

  #-------------------------------------
  # [clear]
  #-------------------------------------
  alias cl="clear"
  alias cll="cl; pwd; ll"

  #-------------------------------------
  # [cd]
  #-------------------------------------
  alias .l="cd -"
  alias .ll="cd -; cll"
  alias ..="cd ../"
  alias ...="cd ../../"
  alias ....="cd ../../../"
  alias .....="cd ../../../../"
  alias ......="cd ../../../../../"

  # Go up directories then do directory listing
  alias cddl="cdd; cll "
  alias cdddl="cddd; cll "
  alias cddddl="cdddd; cll "
  alias cdddddl="cddddd; cll"
  alias cddddddl="cdddddd; cll "

  # Go up directories then change to directory specified after alias on command-line
  alias cddf="cdd; cd "
  alias cdddf="cddd; cd "
  alias cddddf="cdddd; cd "
  alias cdddddf="cddddd; cd "
  alias cddddddf="cdddddd; cd "

  #-------------------------------------
  # console - other
  #-------------------------------------
  alias hg="history | grep"
  alias mx="chmod +x"

  #-------------------------------------
  # [xmodmap]
  #-------------------------------------
  alias xmboth="xmodmap ~/.config/xmodmap/.xmodmap-both_escape"
  alias xmnormal="xmodmap ~/.config/xmodmap/.xmodmap-normal"
  alias xmswitch="xmodmap ~/.config/xmodmap/.xmodmap-switch"

# }}}

#-------------------------------------------------------------------------------
# [GUI] {{{
#-------------------------------------------------------------------------------
  # SEE: https://unix.stackexchange.com/questions/422111/linux-mint-cinnamon-18-in-what-file-are-the-keyboard-shortcuts-saved
  KEYBINDINGS_FILE="$DOTDIR/gui/cinnamon/keybindings.conf"
  WORKSPACE_FILE="$DOTDIR/gui/cinnamon/keybindings.conf"

  alias keybindingsdump="dconf dump /org/cinnamon/desktop/keybindings/"
  alias keybindingsdumpsave="echo 'Writing to: $KEYBINDINGS_FILE\n'; dconf dump /org/cinnamon/desktop/keybindings/ | tee $KEYBINDINGS_FILE"
  alias keybindingsload="dconf load /org/cinnamon/desktop/keybindings/"

  alias workspacesettingsdump="dconf dump /org/cinnamon/desktop/wm/"
  alias workspacesettingsdumpsave="echo 'Writing to: $WORKSPACE_FILE\n'; dconf dump /org/cinnamon/desktop/wm/ | tee $WORKSPACE_FILE"
  alias workspacesettingsload="dconf load /org/cinnamon/desktop/wm/"
# }}}

#-------------------------------------------------------------------------------
# [tools] {{{
#-------------------------------------------------------------------------------
  # backwards-compatibility for some scripts
  alias ack-grep="ack"
  alias bat="batcat"
  # Copy flie contents to clipboard
  alias clip="xclip -sel clip <"
  alias cmv="command -v"
  alias fd="fdfind"
  alias fr="file-roller"
  # search bashmarks
  alias lg="l | grep -i"
  alias op="xdg-open"
  alias open="op"
  alias pg="ps -efH | grep"
  alias syslog="tail -f /var/log/syslog"

  TREE_BIN=/usr/bin/tree
  alias treee="cl; $TREE_BIN"
  alias tree="cl; $TREE_BIN -a -I '.git|build|dist|node_modules|__pycache__|.terraform'"
  alias treea="cl; $TREE_BIN -a"
  alias treeg="cl; $TREE_BIN -I '.git|build|dist|node_modules|__pycache__.terraform'"
  alias tree1="tree -L 1"
  alias tree2="tree -L 2"
  alias tree3="tree -L 3"

  alias whatismyip="wget http://ipinfo.io/ip -qO -"

  #alias yqd='docker run --name yqtmp --rm -v"${PWD}":/workdir mikefarah/yq:3.3.4 yq "$@"'
  alias yqd='docker run --name yqtmp --rm -i mikefarah/yq:3.3.4 yq "$@"'
  alias yqd4='docker run --name yqtmp --rm -v"${PWD}":/workdir mikefarah/yq:latest "$@"'
# }}}


#-------------------------------------------------------------------------------
# [Colors] {{{
#-------------------------------------------------------------------------------
  alias b='find ~/.config/base16-shell/scripts/*.sh \
    | sed -r "s|(.*)/base16-(.*)\.sh|\2\t\1/base16-\2.sh|" \
    | column -t \
    | fzf \
    | xargs -I {} zsh -c \
    "eval $(functions _base16); _base16 \$(echo "{}" | awk '"'"'{ print \$2,\$1; }'"'"';) "'
# }}}


#-------------------------------------------------------------------------------
# [Docker] {{{
#-------------------------------------------------------------------------------
  alias dps="cl; docker ps"
  alias dpsa="cl; docker ps -a"
  alias dpsaf="cl; dps -a --format 'table {{.Names}}\t{{.Image}}\t{{.Status}}\t{{.Ports}}'"
  alias dpsf="cl; dps --format 'table {{.Names}}\t{{.Image}}\t{{.Status}}\t{{.Ports}}'"
  alias dpsinfo="docker ps -q |xargs docker inspect --format '{{ printf \"%s\t\t|%s\t|%s\n\" .Name .Config.Hostname .HostConfig.NetworkMode }}'"
  alias images="cl; docker images"
  alias up="docker-compose up"
  alias upd="docker-compose up -d"
# }}}


#-------------------------------------------------------------------------------
# [Dotfiles] {{{
#-------------------------------------------------------------------------------
  IS_GIT_STAGED='[ "$(git status -s | grep "^A" | wc -l)" != 0 ] && (echo -e "CANNOT: already staged files\n"; git status -s) ||'

  alias commitaliases='cd ${DOTDIR}/bash/bash; '$IS_GIT_STAGED' (git add .bash_aliases; git ci -m"bash_aliases: updated aliases"); cd -'
  alias commitbashrc='cd ${DOTDIR}/bash/;      '$IS_GIT_STAGED' (git add .bashrc; git ci -m"bashrc: updated"); cd -'
  alias commitdesktop='cd ${DOTDIR}/desktop;   '$IS_GIT_STAGED' (git add .local; git ci -m"desktop: updated .desktop shortcuts"); cd -'
  alias commitgitconf='cd ${DOTDIR}/git;       '$IS_GIT_STAGED' (git add .gitconfig; git ci -m"git: updated .gitconfig"); cd -'
  alias committmux='cd ${DOTDIR}/tmux;         '$IS_GIT_STAGED' (git add .tmux.conf; git ci -m"tmux: updated .tmux.conf"); cd -'
  alias commitvimrc='cd ${DOTDIR}/vim;         '$IS_GIT_STAGED' (git add .vimrc; git ci -m"vim: updated .vimrc"); cd -'
  alias commitvscode='cd ${DOTDIR}/vscode;     '$IS_GIT_STAGED' (git add .config; git ci -m"vscode: updated VSCode config settings"); cd -'

  alias commitglb=''$IS_GIT_STAGED'       (git add .gitlab-ci.yml; git ci -m "Updated .gitlab-ci.yml")'
  alias commitgitignore=''$IS_GIT_STAGED' (git add .gitignore; git ci -m "Updated .gitignore")'

  alias gitconf="vim ${DOTDIR}/git/.gitconfig"
  alias glb="vim .gitlab-ci.yml"
  alias tmconf="vim ~/.tmux.conf"
  alias vimrc="vim ${DOTDIR}/vim/.vimrc"
  alias vimrcl="vim ${DOTDIR}/vim/.vim/.vimrc-local"
# }}}


#-------------------------------------------------------------------------------
# [gcloud] {{{
#-------------------------------------------------------------------------------
  alias gcl="gcloud auth login"
  alias gcld="gcloud auth application-default login"
  alias gclall="gcal; gcaadl"
# }}}


#-------------------------------------------------------------------------------
# [Git] {{{
#-------------------------------------------------------------------------------
  alias clrgit="cl; git"

  # Add
  alias ga="git add"

  # Branch
  alias gb="git branch"
  alias gbav="git branch -av"
  alias gbd="git branch -d"
  alias gbm="git branch -m"

  # Diff
  alias gd="clrgit diff --"
  alias gdp="clrgit diff -- . ':!package-lock.json'"

  # Diff --staged
  alias gds="clrgit diff --staged --"
  alias gdsp="clrgit diff --staged -- . ':!package-lock.json'"

  # Log
  alias gl="clrgit l"
  alias gln="clrgit l --name-only"
  alias glf="gln"
  alias gls="clrgit l --stat"
  alias glnopage="clrgit -c pager.log=false l"

  # Log - Graph
  alias glg="clrgit lg"
  alias glgf="clrgit lgf"

  # Log - Graph (Quarter/Half/Full-screen)
  alias glgq="glg -n 15"
  alias glgh="glg -n 22"

  # Log - Graph --all
  alias glga="clrgit lga"
  # Log - Graph --all (Quarter/Half/Full-screen)
  alias glgaq="glg -n 15"
  alias glgah="glg -n 22"
  alias glgaf="glg -n 45"

  # Push/Pull
  alias pull="git pl"
  alias push="git ps"

  # Restore
  alias rs="git restore"
  alias rss="git restore --staged"

  # Show
  alias gsh="clrgit show"

  # Status
  alias gst="clrgit st"
  alias gss="clrgit ss"

  # MISCELLANEOUS
  alias remote="git remote -v"
  alias remotes="clrgit remote -v"
# }}}


#-------------------------------------------------------------------------------
# [Kubernetes] {{{
#-------------------------------------------------------------------------------
  alias certs="kubectl get Issuers,ClusterIssuers,Certificates,CertificateRequests,Orders,Challenges"

  alias configmaps="kubectl get configmaps"

  alias context="kubectl config get-contexts"
  alias contexts="kubectl config get-contexts | tail -n +2 | awk '{print \$2}'"
  alias rcontext="kubectl config rename-context"

  alias describe="kubectl describe"
  alias describep="kubectl describe pod"

  alias deployment="kubectl get deployments"
  alias deployments="kubectl get deployments -o wide"

  alias endpoint="kubectl get endpoints"
  alias endpoints="kubectl get endpoints -A"

  alias get="kubectl get all"
  alias geta="kubectl get all -A"

  alias ingress="kubectl get ingress"
  alias ingressa="kubectl get ingress -A"

  alias issuers="kubectl get issuers"
  alias issuersa="kubectl get issuers -A"

  alias logs="kubectl logs"

  alias nodes="kubectl get nodes"
  alias nodesw="kubectl get nodes -o wide"

  alias pod="kubectl get pods"
  alias pods="kubectl get pods -o wide"
  alias podsa="kubectl get pods -o wide -A"

  alias podcidr="kubectl get nodes -o jsonpath='{.items[*].spec.podCIDR}'"

  alias pvs="kubectl get persistentvolumes"
  alias pvcs="kubectl get persistentvolumeclaims"

  alias secrets="kubectl get secrets"

  alias service="kubectl get services"
  alias servicea="kubectl get services -A"
  alias services="kubectl get services -o wide"
  alias servicesa="kubectl get services -A -o wide"

  alias storageclasses="kubectl get storageclasses"

  #-----------------------
  # K8s Tools
  #-----------------------
  alias kctx="kubectx"
  alias kns="kubens"
# }}}


#-------------------------------------------------------------------------------
# [Maven] {{{
#-------------------------------------------------------------------------------
  alias mvcc="mvn clean compile"
  alias mvci="mvn clean install"
  alias mvcist="mvn clean install -DskipTests=true"
  alias sbr="mvn spring-boot:run"
# }}}


#-------------------------------------------------------------------------------
# [MySQL] {{{
#-------------------------------------------------------------------------------
  alias lmysql="mysql -h 0.0.0.0 -P 3306 -u root -ppw"
# }}}


#-------------------------------------------------------------------------------
# [networking] {{{
#-------------------------------------------------------------------------------
  alias hosts="cat /etc/hosts"
  alias ibas="sudo ip -br addr show"
  alias ns="sudo netstat -tlpn"
  alias nsg="sudo netstat -tlpn | grep"
# }}}


#-------------------------------------------------------------------------------
# [proxies] {{{
#-------------------------------------------------------------------------------
  alias pxoff="tmuxsendall '. proxytoggle off'"
  alias pxon="tmuxsendall '. proxytoggle on'"
  alias pxon8090="tmuxsendall '. proxytoggle on 127.0.0.1 8090'"

  alias pxoff=". proxytoggle off"
  alias pxon=". proxytoggle on"
  alias pxon8090=". proxytoggle on 127.0.0.1 8090"

  alias pxs="proxystatus"
  alias pxt="proxytoggle"
# }}}


#-------------------------------------------------------------------------------
# [node/npm] {{{
#-------------------------------------------------------------------------------
  alias npml="npm ls --depth=0"
# }}}


#-------------------------------------------------------------------------------
# [PHP] {{{
#-------------------------------------------------------------------------------
  alias php='docker run -it --rm --name php-cli-tmp php:latest php -a'
  alias phpcli='php'
  alias phpscript='docker run -it --rm --name php-script-tmp -v $PWD:/usr/src/myapp -w /usr/src/myapp php:latest php'
# }}}


#-------------------------------------------------------------------------------
# [SSH] {{{
#-------------------------------------------------------------------------------
  alias sconf="vim ~/.ssh/config"
  alias sconfl="vim ~/.ssh/config-local"
  alias rmsock="rm -rf ~/.ssh/sockets/*"
  alias sshagent='eval $(ssh-agent -s); ssh-add'
# }}}


#-------------------------------------------------------------------------------
# [tmux] {{{
#-------------------------------------------------------------------------------
# See ~/bin/tm
  alias tmls="tmux ls"
  alias tma="tmux attach -t"
  alias 0="tma 0"
  alias 1="tmux select-window -t 1"
  alias 2="tmux select-window -t 2"
  alias 3="tmux select-window -t 3"
  alias 4="tmux select-window -t 4"
  alias 5="tmux select-window -t 5"
  alias 6="tmux select-window -t 6"
  alias 7="tmux select-window -t 7"
  alias 8="tmux select-window -t 8"
  alias 9="tmux select-window -t 9"
  alias tmrenamesession='tmux rename-session -t "$(tmux display-message -p "#S")"'
  alias tmrenamewindow='tmux rename-window -t "$(tmux display-message -p "#{window_id}")"'
  alias tmrs="tmrenamesession"
  alias tmrw="tmrenamewindow"
# }}}


#-------------------------------------------------------------------------------
# [VMs] {{{
# [Multipass]
# [Vagrant]
# [VirtualBox]
#-------------------------------------------------------------------------------
  alias mp="multipass"
  alias mpls="multipass ls"
  alias mpsh="multipass shell"
# }}}


#------------------------------------------------------------------------------#
#                                 FUNCTIONS                                    #
#------------------------------------------------------------------------------#
# Colored man pages
man() {
  env LESS_TERMCAP_mb=$'\E[01;31m' \
  LESS_TERMCAP_md=$'\E[01;38;5;74m' \
  LESS_TERMCAP_me=$'\E[0m' \
  LESS_TERMCAP_se=$'\E[0m' \
  LESS_TERMCAP_so=$'\E[38;5;246m' \
  LESS_TERMCAP_ue=$'\E[0m' \
  LESS_TERMCAP_us=$'\E[04;38;5;146m' \
  man "$@"
}

# From: https://betterprogramming.pub/boost-your-command-line-productivity-with-fuzzy-finder-985aa162ba5d#451c
# Select a running docker container to stop
ds() {
  local cid
  cid=$(docker ps | sed 1d | fzf -q "$1" | awk '{print $1}')

  [ -n "$cid" ] && docker stop "$cid"
}

# From: https://betterprogramming.pub/boost-your-command-line-productivity-with-fuzzy-finder-985aa162ba5d#451c
# Select a docker container to remove
drm() {
  local cid
  cid=$(docker ps -a | sed 1d | fzf -q "$1" | awk '{print $1}')

  [ -n "$cid" ] && docker rm "$cid"
}

# Start VM from disk image (usually qcow2)
# SEE: https://powersj.io/posts/ubuntu-qemu-cli/
#
# Use "Ctrl-A X" to get out of VM cli console & kill VM
qemuStart() {
  local vm_disk=$1
  local use_graphics=${2:-n}

  local graphics_arg="-nographic"

  if [ ! -f "${vm_disk}" ]; then
    echo "You must provide a path to a VM disk file: <vm_disk> [use_graphics(y|n)]"
    return 1
  fi

  if [ "${use_graphics}" != "n" ]; then
    graphics_arg=("-vga" "std")
  fi

  qemu-system-x86_64 \
    -accel kvm \
    -cpu host \
    -m 2048 \
    -drive file="${vm_disk}",media=disk,if=virtio \
    -device virtio-net-pci,netdev=net0 \
    -netdev user,id=net0,hostfwd=tcp::2222-:22 \
    "${graphics_arg[@]}"
}

# TMUX Smart (session-aware) Switch
tms() {
  if [ -n "$1" ]; then
    # ifAreInTmux?
    if env | grep -iq TMUX; then
      tmux switch -t $1
    else
      tmux attach -t $1
    fi
  else
    echo "Must provide: <session_name>"
  fi
}

# vim: set ft=sh foldlevel=0 foldmarker={{{,}}} foldmethod=marker
