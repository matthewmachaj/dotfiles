#-------------------------------------------------------------------------------
# Simply RETURN when this is NOT sourced in an interactive session
# (SCP will not work w/o this b/c if you have 'echo' statements in your .rc's)
#
# NOTE: Ansible runs in non-interactive session so this applies to Ansible as well
# SEE: https://unix.stackexchange.com/a/18647/408519
#-------------------------------------------------------------------------------
case $- in
    *i*) ;;
      *) return;;
esac

#---------------------------#
# TERM - base16-shell       #
#---------------------------#
if [ ! -d ~/.config/base16-shell/.git ]; then
  git clone https://github.com/chriskempson/base16-shell.git ~/.config/base16-shell
fi

BASE16_SHELL="$HOME/.config/base16-shell"
[ -n "$PS1" ] && [ -s "$BASE16_SHELL/profile_helper.sh" ] && eval "$("$BASE16_SHELL/profile_helper.sh")"

#---------------------------#
# PATH                      #
#---------------------------#
[ ! -d $HOME/.local/bin ] && { echo "Making $HOME/.local/bin" ; mkdir $HOME/.local/bin }
[ ! -d $HOME/bin ] && { echo "Making $HOME/bin" ; mkdir $HOME/bin }

BIN_DIRS=(
  $HOME/.local/bin
  $HOME/bin
  $HOME/mmbin
  /opt/bin
)

for _path in ${BIN_DIRS[@]}
do
  if [ -d "$_path" ]; then
    export PATH="$_path:$PATH"
  fi
done

export EDITOR="vi"
export FCEDIT="vi"
export VISUAL="vi"

export DOT_DIR=~/dotfiles

# SOUCE - common shell aliases
source $DOT_DIR/shell/aliases

# SOUCE - Kubernetes aliases
source $DOT_DIR/shell/aliases.kubernetes

# SOURCE - common shell files
for common_shell_file in $DOT_DIR/shell/*.common
do
  echo "Sourcing -> [$common_shell_file]"
  source "$common_shell_file"
done
