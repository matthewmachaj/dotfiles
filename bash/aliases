#-------------------------------------------------------------------------------
# [Bash]
#-------------------------------------------------------------------------------
BASH_ALIASES=~/dotfiles/bash/aliases
LOCAL_BASH_ALIASES=~/.local/bash/aliases

#-------------------------------------
# Bash - [Aliases]
#-------------------------------------
alias al="vim ${BASH_ALIASES}"
alias lal="vim ${LOCAL_BASH_ALIASES}"
alias sa=". ${BASH_ALIASES}; [ -f ${LOCAL_BASH_ALIASES} ] && . ${LOCAL_BASH_ALIASES}"

#-------------------------------------
# [bin]
#-------------------------------------
alias bin="cd ~/bin"
alias lbin="cd ~/.local/bin"
alias mmbin="cd ~/mmbin"

#-------------------------------------
# [clear]
#-------------------------------------
alias cl="clear"
alias cll="cl; pwd; ll"

#-------------------------------------
# [cd]
#-------------------------------------
alias cdl="cd -"
alias cdll="cd -; cll"
alias cdd="cd ../"
alias cddd="cd ../../"
alias cdddd="cd ../../../"
alias cddddd="cd ../../../../"
alias cdddddd="cd ../../../../../"

# Go up directories then do directory listing
alias cddl="cdd; cll "
alias cdddl="cddd; cll "
alias cddddl="cdddd; cll "
alias cdddddl="cddddd; cll"
alias cddddddl="cdddddd; cll "

# Go up directories then change to directory specified after alias on command-line
alias cddf="cdd; cd "
alias cdddf="cddd; cd "
alias cddddf="cdddd; cd "
alias cdddddf="cddddd; cd "
alias cddddddf="cdddddd; cd "

#-------------------------------------
# console - other
#-------------------------------------
alias hg="history | grep"
alias ll="ls -alh"
alias mx="chmod +x"

################################################################################

#-------------------------------------------------------------------------------
# [tools]
#-------------------------------------------------------------------------------
# backwards-compatibility for some scripts
alias ack-grep="ack"
alias bat="batcat"
# Copy flie contents to clipboard
alias clip="xclip -sel clip <"
alias cmv="command -v"
alias fd="fdfind"
alias fr="file-roller"
# search bashmarks
alias lg="l | grep -i"
alias op="xdg-open"
alias open="op"
alias pg="ps -efH | grep"
alias syslog="tail -f /var/log/syslog"

TREE_BIN=/usr/bin/tree
alias treee="cl; $TREE_BIN"
alias tree="cl; $TREE_BIN -a -I '.git|build|dist|node_modules'"
alias treea="cl; $TREE_BIN -a"
alias treeg="cl; $TREE_BIN -I '.git|build|dist|node_modules'"
alias tree1="tree -L 1"
alias tree2="tree -L 2"
alias tree3="tree -L 3"

alias whatismyip="wget http://ipinfo.io/ip -qO -"

#alias yqd='docker run --name yqtmp --rm -v"${PWD}":/workdir mikefarah/yq:3.3.4 yq "$@"'
alias yqd='docker run --name yqtmp --rm -i mikefarah/yq:3.3.4 yq "$@"'
alias yqd4='docker run --name yqtmp --rm -v"${PWD}":/workdir mikefarah/yq:latest "$@"'


################################################################################

#-------------------------------------------------------------------------------
# [Docker]
#-------------------------------------------------------------------------------
alias dps="cl; docker ps"
alias dpsa="cl; docker ps -a"
alias dpsaf="cl; dps -a --format 'table {{.Names}}\t{{.Image}}\t{{.Status}}\t{{.Ports}}'"
alias dpsf="cl; dps --format 'table {{.Names}}\t{{.Image}}\t{{.Status}}\t{{.Ports}}'"
alias dpsinfo="docker ps -q |xargs docker inspect --format '{{ printf \"%s\t\t|%s\t|%s\n\" .Name .Config.Hostname .HostConfig.NetworkMode }}'"
alias images="cl; docker images"
alias up="docker-compose up"
alias upd="docker-compose up -d"


#-------------------------------------------------------------------------------
# [Dotfiles]
#-------------------------------------------------------------------------------
IS_GIT_STAGED='[ "$(git status -s | grep "^A" | wc -l)" != 0 ] && (echo -e "CANNOT: already staged files\n"; git status -s) ||'

alias commitaliases='cd ~/dotfiles/bash/bash; '$IS_GIT_STAGED' (git add .bash_aliases; git ci -m"bash_aliases: updated aliases"); cd -'
alias commitbashrc='cd ~/dotfiles/bash/;      '$IS_GIT_STAGED' (git add .bashrc; git ci -m"bashrc: updated"); cd -'
alias commitdesktop='cd ~/dotfiles/desktop;   '$IS_GIT_STAGED' (git add .local; git ci -m"desktop: updated .desktop shortcuts"); cd -'
alias commitgitconf='cd ~/dotfiles/git;       '$IS_GIT_STAGED' (git add .gitconfig; git ci -m"git: updated .gitconfig"); cd -'
alias committmux='cd ~/dotfiles/tmux;         '$IS_GIT_STAGED' (git add .tmux.conf; git ci -m"tmux: updated .tmux.conf"); cd -'
alias commitvimrc='cd ~/dotfiles/vim;         '$IS_GIT_STAGED' (git add .vimrc; git ci -m"vim: updated .vimrc"); cd -'
alias commitvscode='cd ~/dotfiles/vscode;     '$IS_GIT_STAGED' (git add .config; git ci -m"vscode: updated VSCode config settings"); cd -'

alias commitglb=''$IS_GIT_STAGED'       (git add .gitlab-ci.yml; git ci -m "Updated .gitlab-ci.yml")'
alias commitgitignore=''$IS_GIT_STAGED' (git add .gitignore; git ci -m "Updated .gitignore")'

alias gitconf="vim ~/dotfiles/git/.gitconfig"
alias glb="vim .gitlab-ci.yml"
alias tmconf="vim ~/.tmux.conf"
alias vimrc="vim ~/dotfiles/vim/.vimrc"


#-------------------------------------------------------------------------------
# [Git]
#-------------------------------------------------------------------------------
alias clrgit="cl; git"

# Add
alias ga="git add"

# Branch
alias gb="git branch"
alias gbav="git branch -av"
alias gbd="git branch -d"
alias gbm="git branch -m"

# Diff
alias gd="clrgit diff"

# Diff --staged
alias gds="clrgit diff --staged"

# Log
alias gl="clrgit l"

# Log - Graph
alias glg="clrgit lg"

# Log - Graph (Quarter/Half/Full-screen)
alias glgq="glg -n 15"
alias glgh="glg -n 22"
alias glgf="glg -n 45"

# Log - Graph --all
alias glga="clrgit lga"
# Log - Graph --all (Quarter/Half/Full-screen)
alias glgaq="glg -n 15"
alias glgah="glg -n 22"
alias glgaf="glg -n 45"

# Push/Pull
alias pull="git pl"
alias push="git ps"

# Restore
alias rs="git restore"
alias rss="git restore --staged"

# Show
alias gsh="clrgit show"

# Status
alias gst="clrgit st"
alias gss="clrgit ss"

# MISCELLANEOUS
alias remotes="clrgit remote -v"


#-------------------------------------------------------------------------------
# [Maven]
#-------------------------------------------------------------------------------
alias mvcc="mvn clean compile"
alias mvci="mvn clean install"
alias mvcist="mvn clean install -DskipTests=true"
alias sbr="mvn spring-boot:run"


#-------------------------------------------------------------------------------
# [MySQL]
#-------------------------------------------------------------------------------
alias lmysql="mysql -h 0.0.0.0 -P 3306 -u root -ppw"


#-------------------------------------------------------------------------------
# [networking]
#-------------------------------------------------------------------------------
alias hosts="cat /etc/hosts"
alias ns="sudo netstat -tlpn"
alias nsg="sudo netstat -tlpn | grep"

#------------------------------------------------
# [proxies]
#------------------------------------------------
alias pxoff="tmuxsendall '. proxytoggle off'"
alias pxon="tmuxsendall '. proxytoggle on'"
alias pxon8090="tmuxsendall '. proxytoggle on 127.0.0.1 8090'"

alias pxoff=". proxytoggle off"
alias pxon=". proxytoggle on"
alias pxon8090=". proxytoggle on 127.0.0.1 8090"

alias pxs="proxystatus"
alias pxt="proxytoggle"

#-------------------------------------------------------------------------------
# [node/npm]
#-------------------------------------------------------------------------------
alias npml="npm ls --depth=0"

#-------------------------------------------------------------------------------
# [PHP]
#-------------------------------------------------------------------------------
alias php='docker run -it --rm --name php-cli-tmp php:latest php -a'
alias phpcli='php'
alias phpscript='docker run -it --rm --name php-script-tmp -v $PWD:/usr/src/myapp -w /usr/src/myapp php:latest php'

#-------------------------------------------------------------------------------
# [SSH]
#-------------------------------------------------------------------------------
alias sconf="vim ~/.ssh/config"
alias sconfl="vim ~/.ssh/config-local"
alias rmsock="rm -rf ~/.ssh/sockets/*"

#-------------------------------------------------------------------------------
# [Terminals]
#-------------------------------------------------------------------------------
alias dark="setTermColor solarized-dark"
alias default="setTermColor Default"
alias light="setTermColor solarized-light"
alias tango="setTermColor Tango"

#-------------------------------------------------------------------------------
# [tmux]
#-------------------------------------------------------------------------------
# See ~/bin/tm
alias tmls="tmux ls"
alias tma="tmux attach -t"
alias 1="tmux select-window -t 1"
alias 2="tmux select-window -t 2"
alias 3="tmux select-window -t 3"
alias 4="tmux select-window -t 4"
alias 5="tmux select-window -t 5"
alias 6="tmux select-window -t 6"
alias 7="tmux select-window -t 7"
alias 8="tmux select-window -t 8"
alias 9="tmux select-window -t 9"
alias tmrenamesession='tmux rename-session -t "$(tmux display-message -p "#S")"'
alias tmrenamewindow='tmux rename-window -t "$(tmux display-message -p "#{window_id}")"'
alias tmrs="tmrenamesession"
alias tmrw="tmrenamewindow"

#-------------------------------------------------------------------------------
# [Multipass]
# [Vagrant]
# [VirtualBox]
# [VMs]
#-------------------------------------------------------------------------------
alias mp="multipass"
alias mpls="multipass ls"
alias mpsh="multipass shell"


#------------------------------------------------------------------------------#
#                                 FUNCTIONS                                    #
#------------------------------------------------------------------------------#
# TMUX Smart (session-aware) Switch
tms() {
  if [ -n "$1" ]; then
    # ifAreInTmux?
    if env | grep -iq TMUX; then
      tmux switch -t $1
    else
      tmux attach -t $1
    fi
  else
    echo "Must provide: <session_name>"
  fi
}

# From: https://betterprogramming.pub/boost-your-command-line-productivity-with-fuzzy-finder-985aa162ba5d#451c
# Select a running docker container to stop
function ds() {
  local cid
  cid=$(docker ps | sed 1d | fzf -q "$1" | awk '{print $1}')

  [ -n "$cid" ] && docker stop "$cid"
}
#
# From: https://betterprogramming.pub/boost-your-command-line-productivity-with-fuzzy-finder-985aa162ba5d#451c
# Select a docker container to remove
function drm() {
  local cid
  cid=$(docker ps -a | sed 1d | fzf -q "$1" | awk '{print $1}')

  [ -n "$cid" ] && docker rm "$cid"
}

