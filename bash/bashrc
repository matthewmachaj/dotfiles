#---------------------------#
# SHELL - Vim Settings      #
#---------------------------#
set -o vi

export EDITOR="vi"
export FCEDIT="vi"

# Sets default editor for various systems programs like crontab & git
export VISUAL="vi"


#---------------------------#
# SHELL - Bashmarks         #
#---------------------------#
if [[ $(command -v l | grep alias) ]]; then
  unalias l
fi

if [ ! -f ~/.local/bin/bashmarks.sh ]; then
  mkdir -p ~/.local/bin 2>/dev/null
  curl -o ~/.local/bin/bashmarks.sh "https://raw.githubusercontent.com/huyng/bashmarks/master/bashmarks.sh"
fi
source ~/.local/bin/bashmarks.sh


#---------------------------#
# COMPLETION - SSH          #
#---------------------------#
# Will autocomplete any hosts found in known_hosts
# From: https://gist.github.com/peelman/1773863
complete -W "$(echo `cat ~/.ssh/known_hosts | cut -f 1 -d ' ' | sed -e s/,.*//g | uniq | grep -v "\["`;)" ssh


#---------------------------#
# TERM - base16-shell       #
#---------------------------#
if [[ ! -d ~/.config/base16-shell/.git ]]; then
  git clone https://github.com/chriskempson/base16-shell.git ~/.config/base16-shell
fi

BASE16_SHELL="$HOME/.config/base16-shell"
[ -n "$PS1" ] && [ -s "$BASE16_SHELL/profile_helper.sh" ] && eval "$("$BASE16_SHELL/profile_helper.sh")"


#---------------------------#
# PROMPT - SSH              #
#---------------------------#
# Change prompt if session is remote
if [ -n "$BASH" ]; then
  # See: https://unix.stackexchange.com/a/9607/408519
  if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
    SESSION_TYPE=remote/ssh
  else
    case $(ps -o comm= -p $PPID) in
      sshd|*/sshd) SESSION_TYPE=remote/ssh;;
    esac
  fi

  ESC_START="\033["
  PURPLE="${ESC_START}0;35m"
  NC="${ESC_START}0m"

  #  Search '/PROMPTING' in `man bash` for info on PS1 prompt variables
  if [ "$SESSION_TYPE" = "remote/ssh" ]; then
    # Change Green (32) -> Purple (35) or Red (31)
    #  export PS1=$(echo "$PS1" | sed 's/1;32m/1;31m/')
    export PS1="${PURPLE}[ssh]${NC}${PS1}"
  fi
fi


#---------------------------#
# PROMPT - Vim              #
#---------------------------#
# Change prompt if entering Shell from Vim `:sh`
if [ -n "$BASH" ]; then
  ESC_START="\033["
  RED="${ESC_START}0;31m"
  NC="${ESC_START}0m"

  # Alter prompt if in SHELL via Vim
  # SEE: https://stackoverflow.com/a/19124531/14209903
  if [ "$VIM" ]; then
    PS1="${RED}(vim)${NC}${PS1}"
  fi
fi


#---------------------------#
# ENV - Colors              #
#---------------------------#
# https://stackoverflow.com/questions/5947742/how-to-change-the-output-color-of-echo-in-linux
# https://en.wikipedia.org/wiki/ANSI_escape_code#8-bit
ESC_START="\033["

# No color
export NC="${ESC_START}0m"

export MM_BLACK="${ESC_START}0;30m"
export MM_BLUE="${ESC_START}0;34m"
export MM_BROWN_ORANGE="${ESC_START}0;33m"
export MM_CYAN="${ESC_START}0;36m"
export MM_DARK_GRAY="${ESC_START}1;30m"
export MM_GREEN="${ESC_START}0;32m"
export MM_LIGHT_BLUE="${ESC_START}1;34m"
export MM_LIGHT_CYAN="${ESC_START}1;36m"
export MM_LIGHT_GRAY="${ESC_START}0;37m"
export MM_LIGHT_GREEN="${ESC_START}1;32m"
export MM_LIGHT_PURPLE="${ESC_START}1;35m"
export MM_LIGHT_RED="${ESC_START}1;31m"
export MM_PURPLE="${ESC_START}0;35m"
export MM_RED="${ESC_START}0;31m"
export MM_YELLOW="${ESC_START}1;33m"
export MM_WHITE="${ESC_START}1;37m"


#---------------------------#
# PATH                      #
#---------------------------#
BIN_DIRS=(
  $HOME/mmbin
  /opt/bin
)

for _path in ${BIN_DIRS[@]}
do
  if [ -d "$_path" ]; then
    export PATH="$_path:$PATH"
  fi
done

